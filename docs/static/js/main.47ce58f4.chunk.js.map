{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,YCNnBG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAQC,EAAU,EAAVA,IAGnC,OACI,yBAAKC,UAAU,0CACZ,yBAAKC,IAAMF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCLHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAWF,GAF9C,gEAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAIFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACThB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAZvB,kBAgBZY,GAhBY,4CAAH,sDCCPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECEX,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAU,WAENlB,EAASC,GACRkB,MAAM,SAAAC,GAECH,EAAS,CACLV,KAAMa,EACNL,SAAQ,SAKrB,CAACd,IAIGe,EDvB2BK,CAAapB,GAAhCW,EAFoB,EAE1BL,KAAaQ,EAFa,EAEbA,QAMtB,OACI,oCACI,wBAAIlB,UAAU,sCAAuCI,GAEpDc,GAAW,uBAAGlB,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAIPe,EAAOH,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACIY,IAAOZ,EAAIC,IACPD,UEpBfa,EAAe,WAAM,MAKM1C,mBAAS,CAAC,eALhB,mBAKvB2C,EALuB,KAKX5C,EALW,KAS9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ4C,EAAWf,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACAqB,IAAQrB,EACRA,SAAaA,U,MCnBrCwB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.47ce58f4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue (e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories (cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title , url} ) => {\r\n    \r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n           <img src ={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}y&limit=10&api_key=o03aAorEg9whnze5mwwHfd77wJtEPirc`\r\n    const resp = await fetch (url);\r\n    const { data } = await resp.json();\r\n\r\n\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n     const { data: images,loading } = useFetchGifs(category);\r\n\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n            \r\n                    {\r\n                    images.map( img => (\r\n                    <GifGridItem\r\n                        key = {img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                    \r\n                    }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import  { useState,useEffect } from 'react'\r\nimport { getGifs } from '../components/helpers/getGifs';\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n        .then( imgs => {\r\n          \r\n                setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n\r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","\r\nimport React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n   // const categories = ['One Punch' ,'Samurai x','Dragon Ball']\r\n\r\n    const [categories, setCategories] = useState(['Hey Arnold']);\r\n\r\n  \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key = { category }\r\n                        category = { category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}